import telebot
import logging
from telebot import types
import database
import re


logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)
logger = logging.getLogger(__name__)

token = "5153856526:AAFHm8vI377a8wj1l9Xy2DoPT-QBJ0FuUrc"
bot = telebot.TeleBot(token)

db = database.DataBase('data/timetable_database')


params = {'adding_timetable': False, 'current_timetable': [], 'current_user': '', 'current_day': []}
week_days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']


@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    button = types.InlineKeyboardButton(text="–§—É–Ω–∫—Ü–∏–∏", callback_data='greeting')
    markup.add(button)
    bot.send_message(chat_id=message.from_user.id,
                     text="–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–µ –∑–∞–±—ã—Ç—å –æ —Å–≤–æ—ë–º –¥–æ–º–∞—à–Ω–µ–º –∑–∞–¥–∞–Ω–∏–∏ –∏ –ø–æ–º–æ–≥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ "
                          "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —É—Ä–æ–∫–æ–≤ –∏ –∑–≤–æ–Ω–∫–æ–≤! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö, "
                          "–Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def functions(call):
    if call.data == 'greeting':
        out = ('/start - –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è –∏ –≤—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ\n\n'
               '/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ–º\n\n'
               '/add_timetable - –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ü—Ä–µ–¥–º–µ—Ç" "–≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞" "–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è"\n\n'
               '/lesson - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞, '
               '–≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ(–ª–∏–±–æ –ø–∏—à–µ—Ç, —á—Ç–æ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)\n\n'
               '/homework - –≤—ã–¥–∞—ë—Ç –≤—Å—é –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –¥–æ–º–∞—à–Ω—é—é —Ä–∞–±–æ—Ç—É\n\n'
               '/delete_task "–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞" - —É–¥–∞–ª—è–µ—Ç –∏–∑ –±–¥ –∑–∞–¥–∞–Ω–∏–µ –ø–æ –∫–ª—é—á—É –∏–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –∑–∞–¥–∞–Ω–∏—è –Ω–µ—Ç.\n\n'
               '/timetable - –≤—ã–¥–∞—ë—Ç –≤—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Ä–æ–∫–∞ \n\n'
               '/delete_timetable - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫–∞–∫–æ–µ —É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—à—å—é –∫–Ω–æ–ø–æ–∫\n\n'
               '/edit_timetable - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫–∞–∫–æ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—à—å—é –∫–Ω–æ–ø–æ–∫\n\n'
               '–°–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞": "–∑–∞–¥–∞–Ω–∏–µ" - –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, '
               '–µ—Å–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –µ—Å—Ç—å, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± —ç—Ç–æ–º –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –∏–ª–∏ –Ω–µ—Ç.')
        bot.send_message(chat_id=call.from_user.id, text=out)
        bot.answer_callback_query(callback_query_id=call.id)


@bot.message_handler(commands=['help'])
def help_message(message):
    out = ('/start - –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è –∏ –≤—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ\n\n'
           '/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ–º\n\n'
           '/add_timetable - –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ü—Ä–µ–¥–º–µ—Ç" "–≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞" "–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è"\n\n'
           '/lesson - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞, '
           '–≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ(–ª–∏–±–æ –ø–∏—à–µ—Ç, —á—Ç–æ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)\n\n'
           '/homework - –≤—ã–¥–∞—ë—Ç –≤—Å—é –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –¥–æ–º–∞—à–Ω—é—é —Ä–∞–±–æ—Ç—É\n\n'
           '/delete_task "–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞" - —É–¥–∞–ª—è–µ—Ç –∏–∑ –±–¥ –∑–∞–¥–∞–Ω–∏–µ –ø–æ –∫–ª—é—á—É –∏–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –∑–∞–¥–∞–Ω–∏—è –Ω–µ—Ç.\n\n'
           '/timetable - –≤—ã–¥–∞—ë—Ç –≤—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Ä–æ–∫–∞ \n\n'
           '/delete_timetable - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫–∞–∫–æ–µ —É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—à—å—é –∫–Ω–æ–ø–æ–∫\n\n'
           '/edit_timetable - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫–∞–∫–æ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—à—å—é –∫–Ω–æ–ø–æ–∫\n\n'
           '–°–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞": "–∑–∞–¥–∞–Ω–∏–µ" - –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, '
           '–µ—Å–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –µ—Å—Ç—å, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± —ç—Ç–æ–º –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –∏–ª–∏ –Ω–µ—Ç.')
    bot.send_message(chat_id=message.from_user.id, text=out)


@bot.message_handler(commands=['add_timetable'])
def add_timetable(message):
    params['adding_timetable'] = True
    params['current_day'] = []
    params['current_timetable'] = []
    params['current_user'] = message.from_user.id

    markup = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
    markup.row('/cancel', '/save', '/next')
    bot.send_message(message.from_user.id, text='–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞: "–Ω–∞–∑–≤–∞–Ω–∏–µ", "–Ω–∞—á–∞–ª–æ", "–∫–æ–Ω–µ—Ü"\n'
                                                '–ù–∞–∂–º–∏—Ç–µ "cancel" –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞, '
                                                '"save" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, '
                                                '"next" –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é', reply_markup=markup)
    bot.send_message(chat_id=message.from_user.id, text=f"–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–∫ ‚Ññ{len(params['current_day']) + 1}")


@bot.message_handler(commands=['cancel'])
def cancel(message):
    params['adding_timetable'] = False
    params['current_day'] = []
    params['current_timetable'] = []
    params['current_user'] = ''
    bot.send_message(chat_id=message.from_user.id, text=f"–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
                     reply_markup=types.ReplyKeyboardRemove())


@bot.message_handler(commands=['save'])
def cancel(message):
    day = dict()
    day[week_days[len(params['current_timetable'])]] = params['current_day']
    params['current_timetable'].append(day)
    params['current_day'] = []

    # db.select_with_fetchall("SELECT user_id FROM users")

    bot.send_message(chat_id=message.from_user.id, text='–°–æ—Ö—Ä–∞–Ω—è—é, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üïë')
    print(params)

    # for i in range(len(params['current_timetable'])):
    #     elem = params['current_timetable'][i]
    #     key = elem.keys()[0]
    #     data = elem[key]
    #     for j in range(len(data)):
    #         db.query(f"""INSERT INTO lessons (lesson_name, start_time, end_time, user) VALUES ({}, {}, {}, {})""")

    # db.query(f"""INSERT INTO lessons (lesson_name, start_time, end_time, user) VALUES ({}, {}, {}, {})""")

    # if params['current_user'] in db.select_with_fetchall("""SELECT user_id FROM users""")[0]:
    #     pass
    # else:
    #     db.query(f"""INSERT INTO users (user_id, lessons_ids) VALUES ({params['current_user']}, {})""")

    #
    bot.send_message(chat_id=message.from_user.id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ üëç")
    #
    # adding_timetable[0] = False
    # current_timetable[0] = []
    # current_user[0] = ''
    params['adding_timetable'] = False
    pass


@bot.message_handler(commands=['next'])
def next_day(message):
    day = dict()
    day[week_days[len(params['current_timetable'])]] = params['current_day']
    params['current_timetable'].append(day)
    params['current_day'] = []
    elem_num = len(params['current_timetable']) - 1
    out = '\n'.join([f"{i + 1}) {params['current_timetable'][elem_num][week_days[elem_num]][i]}"
                     for i in range(len(params['current_timetable'][len(params['current_timetable']) - 1]
                                        [week_days[len(params['current_timetable']) - 1]]))])
    bot.send_message(chat_id=message.from_user.id,
                     text=f"–î–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ "
                          f"{week_days[len(params['current_timetable']) - 1].capitalize()}: \n{out}")


@bot.message_handler(commands=['lesson'])
def lesson(message):
    pass


@bot.message_handler(commands=['homework'])
def homework(message):
    pass


@bot.message_handler(commands=['delete_task'])
def delete_task(message):
    pass


@bot.message_handler(commands=['timetable'])
def timetable(message):
    pass


@bot.message_handler(commands=['delete_timetable'])
def delete_timetable(message):
    pass


@bot.message_handler(commands=['edit_timetable'])
def edit_timetable(message):
    pass


@bot.message_handler(content_types=['text'])
def getting_tasks(message):
    if params['adding_timetable']:
        line = message.text
        str_type = r".*,\s.*,\s.*"
        res = re.fullmatch(str_type, line)
        if res is not None and line.count(',') == 2:
            print(line)
            params['current_day'].append(line)
            bot.send_message(chat_id=message.from_user.id, text=f"–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–∫ ‚Ññ{len(params['current_day']) + 1} "
                                                                f"–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ")
        else:
            bot.send_message(chat_id=message.from_user.id, text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
    else:
        pass
    print(params['current_user'])
    print(params['adding_timetable'])
    print(params['current_day'])
    print(params['current_timetable'])


def main():
    bot.polling(non_stop=True)


if __name__ == '__main__':
    main()
